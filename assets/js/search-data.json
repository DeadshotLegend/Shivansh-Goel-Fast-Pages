{
  
    
        "post0": {
            "title": "Shivansh's Bash Tutorial Hacks",
            "content": "Setup project local folders . Create / verify local folders exist | Clone / update github repository | . echo &quot;Setting up local folders&quot; export project_dir=$HOME/vscode_shivansh # setting local project folders in vscode_shivansh export project=$project_dir/Shivansh-Goel-Fast-Pages # my git repository will be cloned here export project_repo=&quot;https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages.git&quot; # my project cd ~ # start in home directory # Check if project directory exists. If not, create one if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... making directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Check if the project directory exists. If exists, then the project was cloned before, and hence # need to updated. If not exists, then the project hasn&#39;t been cloned yet, and I must clone now if [ ! -d $project ] then echo &quot;Git Project directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ else echo &quot;Git Project directory $project exists... pulling $project_repo&quot; cd $project git pull origin master echo &quot;$project_repo successfully updated from origin&quot; cd ~ fi echo &quot;Project directory $project successfuly cloned / updated.&quot; . Setting up local folders Directory /home/shivansh/vscode_shivansh exists. Git Project directory /home/shivansh/vscode_shivansh/Shivansh-Goel-Fast-Pages exists... pulling https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages.git From https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages * branch master -&gt; FETCH_HEAD Already up to date. https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages.git successfully updated from origin Project directory /home/shivansh/vscode_shivansh/Shivansh-Goel-Fast-Pages successfuly cloned / updated. . Validate necessary kernels exists . Javascript | Bash | Python3 | . jupyter kernelspec list &gt; /tmp/kernellist.txt python_exists=`awk &#39;$1 == &quot;python3&quot; { print $2 }&#39; /tmp/kernellist.txt` if [ &quot;&quot; != $python_exists ] then echo &quot;Python Kernel Exists at $python_exists&quot; else echo &quot;Python Kernel Does Not Exist&quot; fi bash_exists=`awk &#39;$1 == &quot;bash&quot; { print $2 }&#39; /tmp/kernellist.txt` if [ &quot;&quot; != $bash_exists ] then echo &quot;Bash Kernel Exists at $bash_exists&quot; else echo &quot;Bash Kernel Does Not Exist&quot; fi javascript_exists=`awk &#39;$1 == &quot;javascript&quot; { print $2 }&#39; /tmp/kernellist.txt` if [ &quot;&quot; != $javascript_exists ] then echo &quot;Javascript Kernel Exists at $javascript_exists&quot; else echo &quot;Javascript Kernel Does Not Exist&quot; fi . Python Kernel Exists at /home/shivansh/.local/share/jupyter/kernels/python3 Bash Kernel Exists at /home/shivansh/.local/share/jupyter/kernels/bash Javascript Kernel Exists at /home/shivansh/.local/share/jupyter/kernels/javascript . Validate necessary packages exist . python | ipykernel | bash-kernel | jupyter | more can be added to package_to_validate in script below | . package_list=/tmp/packagelist.txt if [[ ! -f $package_list ]] then conda list -n base &gt; $package_list fi package_to_validate=(python ipykernel bash-kernel jupyter) for pname in &quot;${package_to_validate[@]}&quot; do p_ver=`awk &#39;$1 == pname { print $2 }&#39; pname=$pname /tmp/packagelist.txt` if [ &quot;$p_ver&quot; == &quot;&quot; ] then echo &quot;$pname not installed&quot; else echo &quot;$pname installed with version $p_ver&quot; fi done . python installed with version 3.9.12 ipykernel installed with version 6.9.1 bash-kernel installed with version 0.8.0 jupyter installed with version 1.0.0 .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/2022/08/28/ShivanshBashTutorial.html",
            "relUrl": "/bash/2022/08/28/ShivanshBashTutorial.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "This is the personalized quiz for Week 2 Hacks",
            "content": "My Hacks . I have removed the repeating questions and anwers with a iterative contruct using dictionaries | Added more questions of my own and also calculated a percentage at the end. | Lastly, I have made the answer check case insensitive. | . import getpass, sys # method to display question and get user&#39;s answers def question_with_response(prompt, qCount): print(&quot;Question &quot; + str(qCount) + &quot; : &quot; + prompt) msg = input() return msg # dictionary to hold questions and answers as key : value pairs questionsDict = {&quot;What command is used to include other functions that were previously developed?&quot;: &quot;import&quot;, &quot;What command in this example is used to evaluate a response?&quot;: &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;: &quot;expression&quot;, &quot;What does Jupyter Notebooks use?&quot;: &quot;python&quot;, &quot;What is the end of the file name of Mark Down Post?&quot;: &quot;.md&quot;, &quot;What kernel does one need to use to use python?&quot;: &quot;ipykernel&quot;, &quot;What command in terminal allows one to switch directory?&quot;: &quot;cd&quot; } # number of questions as length of the dictionary questions = len(questionsDict) # set correct to 0 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) print(&quot;Are you ready to take a test! Press Enter key to begin. Best of luck :)&quot;) input() questionCount = 0 # iterate over list of keys from the dictionary. pass dictionary key as question to the question_with_response function for key in questionsDict: questionCount += 1 rsp = question_with_response(key, questionCount) # compare the value from the dictionary to the user&#39;s input if rsp.lower() == questionsDict[key].lower(): print(rsp + &quot; is correct! Good Job!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! Better Luck next time.&quot;) # print final score print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) # calculate percentage page = correct/questions * 100 # print percentage print(&quot;Total Percentage: &quot; + str (format(page,&quot;.2f&quot;)) + &quot;%&quot;) . Hello, shivansh running /bin/python3 You will be asked 7 questions. Are you ready to take a test! Press Enter key to begin. Best of luck :) Question 1 : What command is used to include other functions that were previously developed? import is correct! Good Job! Question 2 : What command in this example is used to evaluate a response? if is correct! Good Job! Question 3 : Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! Good Job! Question 4 : What does Jupyter Notebooks use? python is correct! Good Job! Question 5 : What is the end of the file name of Mark Down Post? .md is correct! Good Job! Question 6 : What kernel does one need to use to use python? ipykernel is correct! Good Job! Question 7 : What command in terminal allows one to switch directory? cd is correct! Good Job! shivansh you scored 7/7 Total Percentage: 100.00% .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/2022/08/25/personalizedquiz.html",
            "relUrl": "/2022/08/25/personalizedquiz.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Shivansh Docx Personalized",
            "content": "Stuff that I like to do: . I like to study the subjects for my school . | I like to code and have fun with computers . | I like to play sports . | I like to play video games . | . Stuff that I want to improve this year . I want to improve in my overall education . | I want to get more fit and healthy than last year . | I want to expand my hobbies and try out new stuff this year . | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/2022/08/25/Shivansh-docx-personalized.html",
            "relUrl": "/2022/08/25/Shivansh-docx-personalized.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Shivansh's personalized page",
            "content": "Personal Study and Work Pages . Goal for using this page . Useful for connecting notes | Useufl transporting and using code | Help monitor and instantiate content | . . .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/2022/08/24/secondmarkdown.html",
            "relUrl": "/markdown/2022/08/24/secondmarkdown.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Shivansh Goel's First Python Code and use of Jupyter Notebook",
            "content": "print(&quot;Hello, world!&quot;) . Hello, world! .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/2022/08/21/ShivanshJupyter.html",
            "relUrl": "/2022/08/21/ShivanshJupyter.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Shivansh's first Markdown Post",
            "content": "Shivansh Goel Mark Down Post . Goals For CSP this year: . Become better at coding | Learn the various computer languages | Become better with websites and computers | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/2022/08/21/Shivansh.html",
            "relUrl": "/markdown/2022/08/21/Shivansh.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hello, I am Shivansh Goel and part of APCSP period 5. . I am in 10th grade at Del Norte High School. I am learning Python programming and currently having fun with editing pages using Jupyter and GitHub and Markdown :sunglasses: . .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "APCSP Vocabulary",
          "content": "This APCSP Notes: . def = define a function | import = importing other function for uses | cd = change directory | . .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/b-vocab/",
          "relUrl": "/b-vocab/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "APCSP Notes",
          "content": "This is the notes for Shivansh Goel: .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "Personalized Study",
          "content": "Find assingments on these links and edit them here: Link to Canas: https://poway.instructure.com/ Link to myplan: https://launchpad.classlink.com/poway Link to GoogleDrive: https://www.google.com/drive/ .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/personalstudy/",
          "relUrl": "/personalstudy/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}