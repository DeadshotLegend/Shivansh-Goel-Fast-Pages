{
  
    
        "post0": {
            "title": "JavascriptNotes Colloboration",
            "content": "Stuff we talked about . Krishiv: . To create a table, we have to first define a function containing specific variables. | We also have to define a JSON method asscoitiated with the function that we have created. | All the variables that are in the “constructor” must be defined if they are included in the funcion | . Shivansh: . To add objects or instances of the function we have to use the “var” variable | To add multiople objects or instances of the function we can use an array which stores multiple lists | In the end we also set a html function, in my case compsci.html | . Complete: . To finish off the function we must write in html to produce a table | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%205/2022/09/26/javascriptnotes.html",
            "relUrl": "/markdown/week%205/2022/09/26/javascriptnotes.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Brainstorm - Week 5",
            "content": "Project 1 Ideas . MAIN APP: Fitness Based Log . Idea An App To Show A person’s fitness journey and overall progress toward there goals Elements For people to log their fitness goals and progress Max Heart Rate Calorie counter BMI calculator Plan for future goals Dietary Advice Resources for fitness Fitness Quiz Water Log | . | . Program Purpose: . The purpose we will use in our app will be able to give an output through a person input, using arrays, lists, if else and other elements of code. | . SCRUM team role . My team and I decided on the following roles: . Prasith: Backend Krishiv: Scrum Master Shivansh: Frontend Dhruva: Backend Advay: Devops . As Frontend I will make sure that our code is displayed to its best . .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%204/2022/09/25/grouporganized.html",
            "relUrl": "/markdown/week%204/2022/09/25/grouporganized.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Code.org Quiz",
            "content": "The thoughts and ideas before creating the quiz . We decided to create a quiz about a video game | We reviewed the incomplete program given and we figuredo that we should add something which would tell if one got the answer wrong | . Quiz Creation . The onEvent function will be used and the variable used will be console.log: “message” | . During or After finished the quiz . Trying for loops was very difficult | Initiliazing a variable wasn’t working until we set it as a global variable | If, else if, and else statements came in handy in the scoring process | . Stuff which I did differnet than normal quiz . I added if, else if, and else statements to add up the points | I added pictures and transitions | I also added audio to the clip if one got it correct | link to the quiz: https://studio.code.org/projects/applab/7CbDivekQhy604GMl1L-g90DV9CtQBdsoT7uJl0f5iM/edit | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%204/2022/09/22/codequiz.html",
            "relUrl": "/markdown/week%204/2022/09/22/codequiz.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Collaboration CSP Notes",
            "content": "Video 1 . Effective collobaration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it. | Collobaration that includes diverse perspectives helps avoid bias in the development of computing innovations. | Effective colloborative teams practice interspersonal skills, including, but not limited to: Communiation | Consenseus Building | Conflict Resolution | Negotiation | . | A Computing innovation includes a program as an integral part of its function. | A computing innovation can be physical, nonpyhysical computing osftware, or a nonphysical computing concept (e-commerce). | Collobarations that inclues diverse perspectives helps avoid bias in the development of computing innovations. | African Proverb: “If you want to go fast, go alone. If you want to go far, go together.” | . Video 2 . Essential Knowledge Consultation and communication with users are important aspects of the development of computing innovations | Information gathered from potential users can be used to understand the purpose of a program from diverse perspectives and to develop a program that fully incorporates these perspectives | Online tools support collobaration by allowing programmers to share and provide feedback on ideas and doucmentws | Common models such as pair programming exist to facilitate collaboration. | . | Pair Programming: Two programmers work together as a pair. One (the driver) writes program code, while the other review each line of program code as it is typed in. | Think - Pair - Share: Students think through a problem alone, pair with a partner to share ideas, and then share with the rest of the class. | Make sure to leave comments in code | Online tools: (repl.it, Github) | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%204/2022/09/22/CSPnotes.html",
            "relUrl": "/markdown/week%204/2022/09/22/CSPnotes.html",
            "date": " • Sep 22, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Week 4 - Extra hacks",
            "content": "import getpass, sys # method to display question and get user&#39;s answers def question_with_response(prompt, qCount): print(&quot;Question &quot; + str(qCount) + &quot; : &quot; + prompt) msg = input() return msg # dictionary to hold questions and answers as key : value pairs questionsDict = {&quot;Is my group setup strictly on the basis of current friends and common interests? (Answer yes/no)&quot;: &quot;yes&quot;, &quot;Is my group setup with diversity in backgrounds, gender, and perspectives?(Answer yes/no)&quot;: &quot;yes&quot;, &quot;Is my group best equipped for the skill sets needed for success in classroom?(Answer yes/no)&quot;: &quot;yes&quot; } # number of questions as length of the dictionary questions = len(questionsDict) # set correct to 0 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) print(&quot;Are you ready to take a test! Press Enter key to begin. Best of luck :)&quot;) input() questionCount = 0 # iterate over list of keys from the dictionary. pass dictionary key as question to the question_with_response function for key in questionsDict: questionCount += 1 rsp = question_with_response(key, questionCount) # compare the value from the dictionary to the user&#39;s input if rsp.lower() == questionsDict[key].lower(): print(rsp + &quot; is correct! Good Job!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! Better Luck next time.&quot;) # print final score print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) # calculate percentage page = correct/questions * 100 # print percentage print(&quot;Total Perycentage: &quot; + str (format(page,&quot;.2f&quot;)) + &quot;%&quot;) #Editing . Hello, shivansh running /bin/python3 You will be asked 3 questions. Are you ready to take a test! Press Enter key to begin. Best of luck :) Question 1 : Is my group setup strictly on the basis of current friends and common interests? (Answer yes/no) is incorrect! Better Luck next time. Question 2 : Is my group setup with diversity in backgrounds, gender, and perspectives?(Answer yes/no) yes is correct! Good Job! Question 3 : Is my group best equipped for the skill sets needed for success in classroom?(Answer yes/no) yes is correct! Good Job! shivansh you scored 2/3 Total Percentage: 66.67% .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/2022/09/13/week4.html",
            "relUrl": "/2022/09/13/week4.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Preformance Task",
            "content": "",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/week%203/2022/09/09/preformancetask.html",
            "relUrl": "/bash/week%203/2022/09/09/preformancetask.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "This is the personalized hacks for Week 5",
            "content": "// define a function to hold data for a Contender function Contender(name, money, championships) { this.name = name; this.money = money; this.championships = championships; this.role = &quot;&quot;; } // define a setter for role in Contender data Contender.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Contender Contender.prototype.toJSON = function() { const obj = {name: this.name, money: this.money, championships: this.championships, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Contender and assign to variable ultimatechampion var ultimatechampion = new Contender(&quot;Dolphins&quot;, &quot;10.1B&quot;, 1000); // object type is easy to work with in JavaScript logItType(ultimatechampion); // before role logItType(ultimatechampion.toJSON()); ultimatechampion.setRole(&quot;ultimatechampion&quot;); logItType(ultimatechampion); logItType(ultimatechampion.toJSON()); . object ; Contender { name: &#39;Dolphins&#39;, money: &#39;10.1B&#39;, championships: 1000, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Dolphins&#34;,&#34;money&#34;:&#34;10.1B&#34;,&#34;championships&#34;:1000,&#34;role&#34;:&#34;&#34;} object ; Contender { name: &#39;Dolphins&#39;, money: &#39;10.1B&#39;, championships: 1000, role: &#39;ultimatechampion&#39; } string ; {&#34;name&#34;:&#34;Dolphins&#34;,&#34;money&#34;:&#34;10.1B&#34;,&#34;championships&#34;:1000,&#34;role&#34;:&#34;ultimatechampion&#34;} . var poverty = [ new Contender(&quot;Cheifs&quot;, &quot;5.4B&quot;, 2019), new Contender(&quot;Packers&quot;, &quot;4.1B&quot;, 2008), new Contender(&quot;Warriors&quot;, &quot;5.2B&quot;, 20122), new Contender(&quot;Bears&quot;, &quot;3.4B&quot;, 2014), new Contender(&quot;Ravens&quot;, &quot;1.7B&quot;, 1995), new Contender(&quot;Bengals&quot;, &quot;2.7B&quot;, 2021) ]; function League(ultimatechampion, poverty){ ultimatechampion.setRole(&quot;ultimatechampion&quot;); this.ultimatechampion = ultimatechampion; this.League = [ultimatechampion]; this.poverty = poverty; this.poverty.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.League.push(student); }); this.json = []; this.League.forEach(Contender =&gt; this.json.push(Contender.toJSON())); } compsci = new League(ultimatechampion, poverty); logItType(compsci.League); logItType(compsci.League[0].name); logItType(compsci.json[0]); logItType(JSON.parse(compsci.json[0])); . object ; [ Contender { name: &#39;Dolphins&#39;, money: &#39;10.1B&#39;, championships: 1000, role: &#39;ultimatechampion&#39; }, Contender { name: &#39;Cheifs&#39;, money: &#39;5.4B&#39;, championships: 2019, role: &#39;Student&#39; }, Contender { name: &#39;Packers&#39;, money: &#39;4.1B&#39;, championships: 2008, role: &#39;Student&#39; }, Contender { name: &#39;Warriors&#39;, money: &#39;5.2B&#39;, championships: 20122, role: &#39;Student&#39; }, Contender { name: &#39;Bears&#39;, money: &#39;3.4B&#39;, championships: 2014, role: &#39;Student&#39; }, Contender { name: &#39;Ravens&#39;, money: &#39;1.7B&#39;, championships: 1995, role: &#39;Student&#39; }, Contender { name: &#39;Bengals&#39;, money: &#39;2.7B&#39;, championships: 2021, role: &#39;Student&#39; } ] string ; Dolphins string ; {&#34;name&#34;:&#34;Dolphins&#34;,&#34;money&#34;:&#34;10.1B&#34;,&#34;championships&#34;:1000,&#34;role&#34;:&#34;ultimatechampion&#34;} object ; { name: &#39;Dolphins&#39;, money: &#39;10.1B&#39;, championships: 1000, role: &#39;ultimatechampion&#39; } . League.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;background:black;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Money&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Championships&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of compsci.League) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.money + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.championships + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(compsci._toHtml()); . NameMoneyChampionships . Dolphins | 10.1B | 1000 | Cheifs | 5.4B | 2019 | Packers | 4.1B | 2008 | Warriors | 5.2B | 20122 | Bears | 3.4B | 2014 | Ravens | 1.7B | 1995 | Bengals | 2.7B | 2021 | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/week%201/2022/09/05/javascriptocode.html",
            "relUrl": "/bash/week%201/2022/09/05/javascriptocode.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Time Box Fragments",
            "content": "Shivansh Goel Time Box Fragments . Here are the time box fragments organized by weeks . Week 0 | Installing WSL | Installing Jupyter Notebook and Python | Installing VScode | . Week 1 | Python Quiz | Bash Tutorial | Editing index.html | . Week 2 | Lists and Dictionaries | HTML Fragments |   | . .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%202/2022/08/31/tables.html",
            "relUrl": "/markdown/week%202/2022/08/31/tables.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Reporting theme changes",
            "content": "Here is the bad stuff that happened . Note: The following image is inserted using a Jekyll Liquid Filter for relative URL . All the pages, the links on the right top side were removed thus removing an integral part of the blog. | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%202/2022/08/31/Bloggingchanges.html",
            "relUrl": "/markdown/week%202/2022/08/31/Bloggingchanges.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "This is Week 3 Hacks Python Lists",
            "content": "InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Shivansh&quot;, &quot;LastName&quot;: &quot;Goel&quot;, &quot;DOB&quot;: &quot;October 29 2007&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;EMail&quot;: &quot;shivanshggamer@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;Red Bugatti&quot;, &quot;Yellow Bugatti&quot;, &quot;Orange Bugatti&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Joe&quot;, &quot;LastName&quot;: &quot;Mama&quot;, &quot;DOB&quot;: &quot;July 4&quot;, &quot;Residence&quot;: &quot;New York&quot;, &quot;Email&quot;: &quot;joemama@yahoo.com&quot;, &quot;Owns_Cars&quot;: [&quot;Lamborhini&quot;] }) . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # Print the data structure def for_loop(InfoDb): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop(InfoDb) . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Shivansh Goel Residence: San Diego Birth Day: October 29 2007 Cars: Red Bugatti, Yellow Bugatti, Orange Bugatti Joe Mama Residence: New York Birth Day: July 4 Cars: Lamborhini . def PythonQuiz(prompt): global word print (&quot;Question: &quot; + prompt) word = input() return word questions_number = 5 correct_answer = 0 print(&quot;Hello, you will be asked &quot; + str(questions_number) + &quot; questions you should know.&quot;) TheQuiz=[] TheQuiz.append({ &quot;What value is a dozen&quot;: &quot;12&quot;, &quot;How many days are in a year&quot;: &quot;365&quot;, &quot;How many years are in a decade&quot;: &quot;10&quot;, &quot;How much eggs are too much&quot;: &quot;5&quot;, &quot;What is the main measurment for distance in USA&quot;: &quot;mile&quot;, }) for dict in TheQuiz: for questions, answers in dict.items(): PythonQuiz(questions) if word == answers: print(input() + &quot; is correct&quot;) correct_answer += 1 else: print(input() +&quot; is incorrect&quot;) print(&quot;You scored &quot; + str(correct_answer) + &quot;/&quot; + str(questions_number) + &quot;. Good Job!&quot;) . Hello, you will be asked 5 questions you should know. Question: What value is a dozen 365 is correct Question: How many days are in a year 5 is incorrect Question: How many years are in a decade 5 is incorrect Question: How much eggs are too much 5 is correct Question: What is the main measurment for distance in USA mile is correct You scored 3/5. Good Job! . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 Cars: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Shivansh Goel Residence: San Diego Birth Day: October 29 2007 Cars: Red Bugatti, Yellow Bugatti, Orange Bugatti Joe Mama Residence: New York Birth Day: July 4 Cars: Lamborhini .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/week%202/2022/08/30/pythonlists.html",
            "relUrl": "/bash/week%202/2022/08/30/pythonlists.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Alumni Panel Notes",
            "content": "Alumni Panel Notes . Introduction . Mostly all graduates to UCs | Some of them are not majoring in computer science | . Question 1: Biggest Challenge in Computer Science? . Keeping motivation | A lot of problems and hard to find on the internet | Focus on your own path and try to not to compare with others | Try to ignore clashing egos | Hard finding motivation because of smarter people | Have a better mindset to learn instead of just trying to get stuff down | Getting started in coding is very hard | . Question 2: Are there any PBL scenarios in college computer science classes? . There are 2 PBL scenarios in college. 1 of them is defineftly in senior year Project based learning classes and some theory based classes. | There are a lot of PBL exams which are definite for computer silence | A lot of group based and managing group. Be Careful of getting used for doing too much group work. | Be good at managing work | . Question 3: Have you applied CS in your major if you are not majoring in CS? . There is a lot of coding involved in mechanical engineering which will help you out a lot. | Optimizing things are also very well used in a lot of different majors | Computer science can help with very high level math | A lot of requirements in Stats courses and psychology courses need some type of Computer Science | Programming is almost everywhere in a lot of STEM majors | . Question 4: For existing college students have you had a job with school or professor? . Getting internships and talking to professors will help get better jobs. | Try to be unique from the 200 other students in the college lecture | 2 of the alumnis had Internships in Northrop Grumman | 1 of the alumni had Internships in a company doing APIs and web development | . Other Questions: . Doing 2 or 3 personal projects will help out with applying for internships and stuff Path finding algorithms (Graph Theory, etc) a lot of data visualization | Doing a lot of data application in projects and classes | Club called Trident A in UCSD | When trying to apply for internships always have a resume | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%201/2022/08/29/Alumni.html",
            "relUrl": "/markdown/week%201/2022/08/29/Alumni.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Shivansh's Bash Tutorial Hacks",
            "content": "Setup project local folders . Create / verify local folders exist | Clone / update github repository | . echo &quot;Setting up local folders&quot; export project_dir=$HOME/vscode_shivansh # setting local project folders in vscode_shivansh export project=$project_dir/Shivansh-Goel-Fast-Pages # my git repository will be cloned here export project_repo=&quot;https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages.git&quot; # my project cd ~ # start in home directory # Check if project directory exists. If not, create one if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... making directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Check if the project directory exists. If exists, then the project was cloned before, and hence # need to updated. If not exists, then the project hasn&#39;t been cloned yet, and I must clone now if [ ! -d $project ] then echo &quot;Git Project directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ else echo &quot;Git Project directory $project exists... pulling $project_repo&quot; cd $project git pull origin master echo &quot;$project_repo successfully updated from origin&quot; cd ~ fi echo &quot;Project directory $project successfuly cloned / updated.&quot; . Setting up local folders Directory /home/shivansh/vscode_shivansh exists. Git Project directory /home/shivansh/vscode_shivansh/Shivansh-Goel-Fast-Pages exists... pulling https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages.git From https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages * branch master -&gt; FETCH_HEAD Already up to date. https://github.com/deadshotlegend/Shivansh-Goel-Fast-Pages.git successfully updated from origin Project directory /home/shivansh/vscode_shivansh/Shivansh-Goel-Fast-Pages successfuly cloned / updated. . Validate necessary kernels exists . Javascript | Bash | Python3 | . jupyter kernelspec list &gt; /tmp/kernellist.txt python_exists=`awk &#39;$1 == &quot;python3&quot; { print $2 }&#39; /tmp/kernellist.txt` if [ &quot;&quot; != $python_exists ] then echo &quot;Python Kernel Exists at $python_exists&quot; else echo &quot;Python Kernel Does Not Exist&quot; fi bash_exists=`awk &#39;$1 == &quot;bash&quot; { print $2 }&#39; /tmp/kernellist.txt` if [ &quot;&quot; != $bash_exists ] then echo &quot;Bash Kernel Exists at $bash_exists&quot; else echo &quot;Bash Kernel Does Not Exist&quot; fi javascript_exists=`awk &#39;$1 == &quot;javascript&quot; { print $2 }&#39; /tmp/kernellist.txt` if [ &quot;&quot; != $javascript_exists ] then echo &quot;Javascript Kernel Exists at $javascript_exists&quot; else echo &quot;Javascript Kernel Does Not Exist&quot; fi . Python Kernel Exists at /home/shivansh/.local/share/jupyter/kernels/python3 Bash Kernel Exists at /home/shivansh/.local/share/jupyter/kernels/bash Javascript Kernel Exists at /home/shivansh/.local/share/jupyter/kernels/javascript . . categories: [Notebooks] . Validate necessary packages exist . python | ipykernel | bash-kernel | jupyter | more can be added to package_to_validate in script below | . package_list=/tmp/packagelist.txt if [[ ! -f $package_list ]] then conda list -n base &gt; $package_list fi package_to_validate=(python ipykernel bash-kernel jupyter) for pname in &quot;${package_to_validate[@]}&quot; do p_ver=`awk &#39;$1 == pname { print $2 }&#39; pname=$pname /tmp/packagelist.txt` if [ &quot;$p_ver&quot; == &quot;&quot; ] then echo &quot;$pname not installed&quot; else echo &quot;$pname installed with version $p_ver&quot; fi done . python installed with version 3.9.12 ipykernel installed with version 6.9.1 bash-kernel installed with version 0.8.0 jupyter installed with version 1.0.0 .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/week%201/2022/08/28/ShivanshBashTutorial.html",
            "relUrl": "/bash/week%201/2022/08/28/ShivanshBashTutorial.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "This is the personalized quiz for Week 2 Hacks",
            "content": "My Hacks . I have removed the repeating questions and anwers with a iterative contruct using dictionaries | Added more questions of my own and also calculated a percentage at the end. | Lastly, I have made the answer check case insensitive. | . import getpass, sys # method to display question and get user&#39;s answers def question_with_response(prompt, qCount): print(&quot;Question &quot; + str(qCount) + &quot; : &quot; + prompt) msg = input() return msg # dictionary to hold questions and answers as key : value pairs questionsDict = {&quot;What command is used to include other functions that were previously developed?&quot;: &quot;import&quot;, &quot;What command in this example is used to evaluate a response?&quot;: &quot;if&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;: &quot;expression&quot;, &quot;What does Jupyter Notebooks use?&quot;: &quot;python&quot;, &quot;What is the end of the file name of Mark Down Post?&quot;: &quot;.md&quot;, &quot;What kernel does one need to use to use python?&quot;: &quot;ipykernel&quot;, &quot;What command in terminal allows one to switch directory?&quot;: &quot;cd&quot; } # number of questions as length of the dictionary questions = len(questionsDict) # set correct to 0 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) print(&quot;Are you ready to take a test! Press Enter key to begin. Best of luck :)&quot;) input() questionCount = 0 # iterate over list of keys from the dictionary. pass dictionary key as question to the question_with_response function for key in questionsDict: questionCount += 1 rsp = question_with_response(key, questionCount) # compare the value from the dictionary to the user&#39;s input if rsp.lower() == questionsDict[key].lower(): print(rsp + &quot; is correct! Good Job!&quot;) correct += 1 else: print(rsp + &quot; is incorrect! Better Luck next time.&quot;) # print final score print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) # calculate percentage page = correct/questions * 100 # print percentage print(&quot;Total Percentage: &quot; + str (format(page,&quot;.2f&quot;)) + &quot;%&quot;) . Hello, shivansh running /bin/python3 You will be asked 7 questions. Are you ready to take a test! Press Enter key to begin. Best of luck :) Question 1 : What command is used to include other functions that were previously developed? import is correct! Good Job! Question 2 : What command in this example is used to evaluate a response? if is correct! Good Job! Question 3 : Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! Good Job! Question 4 : What does Jupyter Notebooks use? python is correct! Good Job! Question 5 : What is the end of the file name of Mark Down Post? .md is correct! Good Job! Question 6 : What kernel does one need to use to use python? ipykernel is correct! Good Job! Question 7 : What command in terminal allows one to switch directory? cd is correct! Good Job! shivansh you scored 7/7 Total Percentage: 100.00% .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/week%201/2022/08/25/personalizedquiz.html",
            "relUrl": "/bash/week%201/2022/08/25/personalizedquiz.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Shivansh Docx Personalized",
            "content": "Stuff that I like to do: . I like to study the subjects for my school . | I like to code and have fun with computers . | I like to play sports . | I like to play video games . | . Stuff that I want to improve this year . I want to improve in my overall education . | I want to get more fit and healthy than last year . | I want to expand my hobbies and try out new stuff this year . | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/2022/08/25/Shivansh-docx-personalized.html",
            "relUrl": "/2022/08/25/Shivansh-docx-personalized.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Shivansh's personalized page",
            "content": "Personal Study and Work Pages . Goal for using this page . Useful for connecting notes | Useufl transporting and using code | Help monitor and instantiate content | . . .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%201/2022/08/24/secondmarkdown.html",
            "relUrl": "/markdown/week%201/2022/08/24/secondmarkdown.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Shivansh Goel's First Python Code and use of Jupyter Notebook",
            "content": "print(&quot;Hello, world!&quot;) . Hello, world! .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/bash/week%201/2022/08/21/ShivanshJupyter.html",
            "relUrl": "/bash/week%201/2022/08/21/ShivanshJupyter.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Shivansh's first Markdown Post",
            "content": "Shivansh Goel Mark Down Post . Goals For CSP this year: . Become better at coding | Learn the various computer languages | Become better with websites and computers | .",
            "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/markdown/week%200/2022/08/21/Shivansh.html",
            "relUrl": "/markdown/week%200/2022/08/21/Shivansh.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hello, I am Shivansh Goel and part of APCSP period 5. . I am in 10th grade at Del Norte High School. I am learning Python programming and currently having fun with editing pages using Jupyter and GitHub and Markdown :sunglasses: . The following image is inserted using a Jekyll Liquid Filter for relative URL .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "APCSP Vocabulary",
          "content": "This APCSP Notes: . def = define a function | import = importing other function for uses | cd = change directory | . .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/b-vocab/",
          "relUrl": "/b-vocab/",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "APCSP Notes",
          "content": "This is the notes for Shivansh Goel: .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "Personalized Study",
          "content": "Find assingments on these links and edit them here: Link to Canas: https://poway.instructure.com/ Link to myplan: https://launchpad.classlink.com/poway Link to GoogleDrive: https://www.google.com/drive/ .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/personalstudy/",
          "relUrl": "/personalstudy/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://deadshotlegend.github.io/Shivansh-Goel-Fast-Pages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}